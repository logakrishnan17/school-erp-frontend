{"version":3,"sources":["logo.svg","components/create-student.component.js","components/edit-student.component.js","services/service.js","services/AuthService.js","components/student-list.component.js","components/login.component.js","components/navbar.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CreateTodo","props","state","todo_description","todo_responsible","todo_priority","todo_completed","onChangeTodoDescription","bind","onChangeTodoResponsible","onChangeTodoPriority","onSubmit","e","this","setState","target","value","preventDefault","console","log","style","marginTop","className","type","onChange","name","id","checked","Component","EditStudent","url","AuthService","domain","login","getProfile","user","axios","post","then","res","data","catch","err","service","token","setToken","Promise","resolve","getToken","Token","localStorage","setItem","getItem","removeItem","decode","response","status","error","Error","statusText","StudentsList","student","i","key","classDetails","year","DOB","parentDetails","fee","isPaidFee","disabled","onClick","updateStudent","_id","deleteStudent","studentsData","Auth","studentsList","loggedIn","history","replace","get","headers","studentId","delete","code","updatedData","filter","item","toString","loginData","email","password","that","map","currentStudent","Login","onChangeEmail","onChangePassword","htmlFor","App","path","exact","component","CreateStudent","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9b7f5485.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\nexport default class CreateTodo extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\ttodo_description: '',\n\t\t\ttodo_responsible: '',\n\t\t\ttodo_priority: '',\n\t\t\ttodo_completed: false,\n\t\t};\n\n    this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\n\t\tthis.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this);\n\t\tthis.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\n\t\tthis.onSubmit = this.onSubmit.bind(this);\n\t}\n\n\tonChangeTodoDescription(e) {\n\t\tthis.setState({\n\t\t\ttodo_description: e.target.value,\n\t\t});\n\t}\n\n\tonChangeTodoResponsible(e) {\n\t\tthis.setState({\n\t\t\ttodo_responsible: e.target.value,\n\t\t});\n\t}\n\n\tonChangeTodoPriority(e) {\n\t\tthis.setState({\n\t\t\ttodo_priority: e.target.value,\n\t\t});\n\t}\n\n\tonSubmit(e) {\n\t\te.preventDefault();\n\n\t\tconsole.log(`Form submitted:`);\n\t\tconsole.log(`Todo Description: ${this.state.todo_description}`);\n\t\tconsole.log(`Todo Responsible: ${this.state.todo_responsible}`);\n\t\tconsole.log(`Todo Priority: ${this.state.todo_priority}`);\n\n\t\tthis.setState({\n\t\t\ttodo_description: '',\n\t\t\ttodo_responsible: '',\n\t\t\ttodo_priority: '',\n\t\t\ttodo_completed: false,\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div style={{ marginTop: 10 }}>\n\t\t\t\t<h3>Create New Todo</h3>\n\t\t\t\t<form onSubmit={this.onSubmit}>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label>Description: </label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tvalue={this.state.todo_description}\n\t\t\t\t\t\t\tonChange={this.onChangeTodoDescription}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label>Responsible: </label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tvalue={this.state.todo_responsible}\n\t\t\t\t\t\t\tonChange={this.onChangeTodoResponsible}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<div className=\"form-check form-check-inline\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"form-check-input\"\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\tname=\"priorityOptions\"\n\t\t\t\t\t\t\t\tid=\"priorityLow\"\n\t\t\t\t\t\t\t\tvalue=\"Low\"\n\t\t\t\t\t\t\t\tchecked={this.state.todo_priority === 'Low'}\n\t\t\t\t\t\t\t\tonChange={this.onChangeTodoPriority}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label className=\"form-check-label\">Low</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-check form-check-inline\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"form-check-input\"\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\tname=\"priorityOptions\"\n\t\t\t\t\t\t\t\tid=\"priorityMedium\"\n\t\t\t\t\t\t\t\tvalue=\"Medium\"\n\t\t\t\t\t\t\t\tchecked={this.state.todo_priority === 'Medium'}\n\t\t\t\t\t\t\t\tonChange={this.onChangeTodoPriority}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label className=\"form-check-label\">Medium</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-check form-check-inline\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"form-check-input\"\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\tname=\"priorityOptions\"\n\t\t\t\t\t\t\t\tid=\"priorityHigh\"\n\t\t\t\t\t\t\t\tvalue=\"High\"\n\t\t\t\t\t\t\t\tchecked={this.state.todo_priority === 'High'}\n\t\t\t\t\t\t\t\tonChange={this.onChangeTodoPriority}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label className=\"form-check-label\">High</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<input type=\"submit\" value=\"Create Todo\" className=\"btn btn-primary\" />\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from 'react';\n\nexport default class EditStudent extends Component {\n    render() {\n        return (\n            <div>\n                <p>Welcome to Edit Student Component!!</p>\n            </div>\n        )\n    }\n}","import axios from 'axios';\nlet url = 'https://school-erp-backend.herokuapp.com';\n\nexport function login(user) {\n\treturn axios\n\t\t.post(url + '/user/login', user)\n\t\t.then((res) => {\n\t\t\tconsole.log(res.data,\"axios\");\n\t\t\treturn res.data;\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err,\"err\");\n\t\t\treturn err;\n\t\t});\n}\n\nexport function studentsList(token) {\n\treturn axios\n\t\t.get(url + '/student', {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Authorization': token,\n\t\t\t},\n\t\t})\n\t\t.then((res) => {\n\t\t\tconsole.log(res.data);\n\t\t\treturn res.data;\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t\treturn err;\n\t\t});\n}\n\nexport function UpdateStudent(token, studentId, updateStudent) {\n\treturn axios\n\t\t.patch(`${url}/student/${studentId}`, updateStudent, {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n        'Authorization': token,\n\t\t\t},\n\t\t})\n\t\t.then((res) => {\n\t\t\tconsole.log(res.data);\n\t\t\treturn res.data;\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t\treturn err;\n\t\t});\n}\nexport function DeleteStudent(token, studentId) {\n\treturn axios\n\t\t.delete(`${url}/student/${studentId}`, {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n        'Authorization': token,\n\t\t\t}\n\t\t})\n\t\t.then((res) => {\n\t\t\tconsole.log(res.data);\n\t\t\treturn res.data;\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t\treturn err;\n\t\t});\n}","import decode from 'jwt-decode';\nimport * as service from './service';\n\nexport default class AuthService {\n  constructor(domain) {\n    this.login = this.login.bind(this)\n    this.getProfile = this.getProfile.bind(this)\n  }\n  login(user) {\n    return service.login(user).then(res => {\n      if (res.token) {\n        this.setToken(res.token)\n      }\n      return Promise.resolve(res);\n    })\n  }\n  loggedIn() {\n    const token = this.getToken()\n    return !!token\n    // && !this.isTokenExpired(token) \n  }\n  setToken(Token) {\n    localStorage.setItem('token', Token)\n  }\n  getToken() {\n    return localStorage.getItem('token')\n  }\n  logout() {\n    localStorage.removeItem('token');\n  }\n  getProfile() {\n    // Using jwt-decode npm package to decode the token\n    return decode(this.getToken());\n  }\n\n  _checkStatus(response) {\n    // raises an error in case response status is not a success\n    if (response.status >= 200 && response.status < 300) { // Success status lies between 200 to 300\n      return response\n    } else {\n      var error = new Error(response.statusText)\n      error.response = response\n      throw error\n    }\n  }\n}","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport AuthService from '../services/AuthService';\nimport * as service from '../services/service';\n\nexport default class StudentsList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tstudentsData: [],\n\t\t};\n\n\t\tthis.Auth = new AuthService();\n    this.studentsList = this.studentsList.bind(this);\n    this.student = this.student.bind(this);\n    this.updateStudent = this.updateStudent.bind(this);\n    this.deleteStudent = this.deleteStudent.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tif (!this.Auth.loggedIn()) {\n\t\t\treturn this.props.history.replace('/');\n\t\t}\n\n\t\tservice.studentsList(this.Auth.getToken()).then((studentsData) => {\n\t\t\tconsole.log(studentsData, 'studentsData');\n      if(studentsData.data) {\n        this.setState({ studentsData: studentsData.data });\n      }\n\t\t});\n\t}\n\n  student = (data, i) => (\n    <tr key={i}>\n      <td>{data.name ? data.name : '-'}</td>\n      <td>{data.classDetails ? data.classDetails.name : '-'}</td>\n      <td>{data.year ? data.year : '-'}</td>\n      <td>{data.DOB ? data.DOB : '-'}</td>\n      <td>{data.parentDetails ? data.parentDetails.name : '-'}</td>\n      <td>{data.fee ? data.fee : '-'}</td>\n      <td>{data.isPaidFee ? 'Paid' : 'Unpaid'}</td>\n      <td>\n        {\n          data.parentDetails ?\n          <button disabled className=\"btn-primary btn-disabled\">Assigned</button> :\n          <button className=\"btn-primary\" onClick={() => this.updateStudent(data._id)}>Assign</button>\n        }\n      </td>\n      <td>\n        <button className=\"btn-danger\" onClick={() => this.deleteStudent(data._id)}>Delete</button>\n      </td>\n    </tr>\n  );\n\n  updateStudent(data) {\n\n  };\n\n  deleteStudent(data) {\n    service.DeleteStudent(this.Auth.getToken(), data).then((response) => {\n      \n      if(response && response.status && response.status.code === 200) {\n        \n        let updatedData = this.state.studentsData.filter((item) => {\n          return item._id.toString() !== data.toString();\n        });\n\n        this.setState({\n          studentsData: updatedData\n        });\n      }\n\t\t});\n  };\n\n\tonSubmit(e) {\n\t\te.preventDefault();\n\n\t\tlet loginData = {\n\t\t\temail: this.state.email,\n\t\t\tpassword: this.state.password,\n\t\t};\n\n\t\tconsole.log(loginData, 'loginData');\n\n\t\tthis.Auth.login(loginData)\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response, 'tes');\n\t\t\t\tif (response && response.status && response.status.code === 200) {\n\t\t\t\t\tthis.Auth.setToken(response.token);\n\t\t\t\t\tthis.props.history.replace('/list');\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t}\n\n\tstudentsList() {\n    let that = this;\n\t\treturn this.state.studentsData.map(function (currentStudent, i) {\n\t\t\treturn that.student(currentStudent, i);\n\t\t});\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h3>Students List</h3>\n\t\t\t\t<table className=\"table table-striped\" style={{ marginTop: 20 }}>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t\t<th>Class</th>\n\t\t\t\t\t\t\t<th>Year</th>\n\t\t\t\t\t\t\t<th>Date of Birth</th>\n              <th>Parent</th>\n              <th>Fees</th>\n              <th>Paid Status</th>\n              <th>Assign Parent</th>\n              <th>Delete Student</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>{this.studentsList()}</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport AuthService from '../services/AuthService'\n\nexport default class Login extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\temail: '',\n\t\t\tpassword: ''\n\t\t};\n\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n\t\tthis.onChangePassword = this.onChangePassword.bind(this);\n\t\tthis.onSubmit = this.onSubmit.bind(this);\n    this.Auth = new AuthService();\n\t}\n\n  componentDidMount() {\n    if (this.Auth.loggedIn())\n      this.props.history.replace('/list');\n  }\n\n\tonChangeEmail(e) {\n\t\tthis.setState({\n\t\t\temail: e.target.value,\n\t\t});\n\t}\n\n\tonChangePassword(e) {\n\t\tthis.setState({\n\t\t\tpassword: e.target.value,\n\t\t});\n\t}\n\n\tonSubmit(e) {\n\t\te.preventDefault();\n\n\t\tlet loginData = {\n      email: this.state.email,\n      password: this.state.password\n    }\n\n    console.log(loginData,\"loginData\");\n\n    this.Auth.login(loginData)\n    .then(response => {\n      console.log(response,\"tes\");\n      if(response && response.status && response.status.code === 200) {\n        this.Auth.setToken(response.token);\n        this.props.history.replace('/list');\n      }\n    })\n    .catch(function (error){\n        console.log(error);\n    })\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"login\">\n\t\t\t\t<h3 className=\"text-center text-white pt-5\">Login form</h3>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div id=\"login-row\" className=\"row justify-content-center align-items-center\">\n\t\t\t\t\t\t<div id=\"login-column\" className=\"col-md-6\">\n\t\t\t\t\t\t\t<div id=\"login-box\" className=\"col-md-12\">\n\t\t\t\t\t\t\t\t<form onSubmit={this.onSubmit}>\n\t\t\t\t\t\t\t\t\t<h3 className=\"text-center text-info\">Login</h3>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"username\" className=\"text-info\">\n\t\t\t\t\t\t\t\t\t\t\tUsername:\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"username\" id=\"username\" className=\"form-control\"\n                      value={this.state.email}\n\t\t\t\t\t\t\t        onChange={this.onChangeEmail}\n                    />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"password\" className=\"text-info\">\n\t\t\t\t\t\t\t\t\t\t\tPassword:\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<input type=\"password\" name=\"password\" id=\"password\" className=\"form-control\"\n                      value={this.state.password}\n\t\t\t\t\t\t\t        onChange={this.onChangePassword}\n                    />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" className=\"btn btn-info btn-md\" value=\"submit\" />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}","import React, { Component } from 'react';\nimport logo from \"../logo.svg\";\nimport { BrowserRouter as Link } from \"react-router-dom\";\n\nexport default class Navbar extends Component {\n    render() {\n        return (\n          <div className=\"container\">\n            {/* <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n              <a className=\"navbar-brand\" href=\"https://codingthesmartway.com\" target=\"_blank\">\n                <img src={logo} width=\"30\" height=\"30\" alt=\"CodingTheSmartWay.com\" />\n              </a>\n              <Link to=\"/\" className=\"navbar-brand\">School ERP App</Link>\n              <div className=\"collpase navbar-collapse\">\n                <ul className=\"navbar-nav mr-auto\">\n                  <li className=\"navbar-item\">\n                    <Link to=\"/\" className=\"nav-link\">Todos</Link>\n                  </li>\n                  <li className=\"navbar-item\">\n                    <Link to=\"/create\" className=\"nav-link\">Create Student</Link>\n                  </li>\n                  <li className=\"navbar-item\">\n                    <Link to=\"/payment\" className=\"nav-link\">Payment History</Link>\n                  </li>\n                </ul>\n              </div>\n            </nav> */}\n            <br/>\n          </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport logo from \"./logo.svg\";\n\nimport CreateStudent from \"./components/create-student.component\";\nimport EditStudent from \"./components/edit-student.component\";\nimport StudentsList from \"./components/student-list.component\";\nimport Navbar from \"./components/navbar.component\";\nimport Login from \"./components/login.component\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Route path=\"/\" exact component={Login} />\n        <div className=\"container\">\n          {/* <Navbar /> */}\n          {/* <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <a className=\"navbar-brand\" href=\"https://codingthesmartway.com\" target=\"_blank\">\n              <img src={logo} width=\"30\" height=\"30\" alt=\"CodingTheSmartWay.com\" />\n            </a>\n            <Link to=\"/\" className=\"navbar-brand\">School ERP App</Link>\n            <div className=\"collpase navbar-collapse\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"navbar-item\">\n                  <Link to=\"/\" className=\"nav-link\">Todos</Link>\n                </li>\n                <li className=\"navbar-item\">\n                  <Link to=\"/create\" className=\"nav-link\">Create Student</Link>\n                </li>\n                <li className=\"navbar-item\">\n                  <Link to=\"/payment\" className=\"nav-link\">Payment History</Link>\n                </li>\n              </ul>\n            </div>\n          </nav> */}\n          <Route path=\"/list\" exact component={StudentsList} />\n          <Route path=\"/edit/:id\" component={EditStudent} />\n          <Route path=\"/create\" component={CreateStudent} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}